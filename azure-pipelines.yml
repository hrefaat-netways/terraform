# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
# - task: AzureCLI@2
#   inputs:
#     azureSubscription: mysvc
#     scriptType: 'bash'
#     scriptLocation: 'inlineScript'
#     workingDirectory: TERRAFORM/EIP/compute/aks
#     failOnStandardError: true
#     inlineScript: |
#       echo running terraform init
#       terraform init




  - task: CmdLine@2
    inputs:
      # script: 'echo Write your commands here.' 
      workingDirectory: TERRAFORM/EIP/compute/aks
      failOnStderr: true
      # azureSubscription: 
      # script: 'echo Write your commands here.' 
      script: |
        az logout
        export ARM_CLIENT_ID="b38f6df6-9da9-4c8c-92a1-65bddac48414"
        export ARM_CLIENT_SECRET="oxo8Q~7QHDpkrjYnbKQmzXf8FB4fZQIzUGp4Zbhx"
        export ARM_SUBSCRIPTION_ID="e9c6df82-43a6-4361-8b5c-cd513685057e"
        export ARM_TENANT_ID="2ab2b5d0-18af-4aa0-9010-cb69d0c7b92f"
        terraform init

#        az login --service-principal -u b38f6df6-9da9-4c8c-92a1-65bddac48414 -p oxo8Q~7QHDpkrjYnbKQmzXf8FB4fZQIzUGp4Zbhx --tenant 2ab2b5d0-18af-4aa0-9010-cb69d0c7b92f


# - task: CmdLine@2
#   inputs:
#     # script: 'echo Write your commands here.' 
#     workingDirectory: TERRAFORM/EIP/compute/aks
#     failOnStderr: true
#     # azureSubscription: 
#     # script: 'echo Write your commands here.' 
#     script: |
#       echo go to targted module
#       terraform init
#       ls

# - script: 
#   displayName: 'Run a one-line script'

# - script: |
#     echo go to targted module
#     cd TERRAFORM/EIP/compute/aks
#     terraform init
#     ls
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'
